#include<iostream>

using namespace std;

int main()
{
	setlocale(0, "");
	//Задание 1
	//Программа получает на вход последовательность целых неотрицательных чисел,
	//каждое число отделено пробелом. Последовательность завершается числом 0,
	//при считывании которого программа должна закончить свою работу.
	//Выведите наименьший и наибольший элемент данной последовательности
	//Тестовые данные       Ожидаемый результат
	//1 2 -3 4 -5 0					-5 4
	//1 9 -3 -3 2 1	0				-3 9
	//1 2 5 4 3 5 4 5 0			1 5
	int  number;
	cout << "Введите последовательность целых неотрицательных чисел " << endl;
	cin >> number;
	int max = number, min = number;
	while (number != 0)
	{
		if (number > max) max = number;
		if (number < min) min = number;
		cin >> number;
	}
	cout << min << " " << max << endl;

	//Задание 2
	//Программа получает на вход последовательность целых неотрицательных чисел,
	//каждое число отделено пробелом. Последовательность завершается числом 0,
	//при считывании которого программа должна закончить свою работу.
	//Определите, какое количество элементов этой последовательности, равны ее наибольшему элементу.
	//Формат входных данных
	//Вводится последовательность натуральных чисел, оканчивающаяся числом 0
	//(само число 0 в последовательность не входит, а служит как признак ее окончания).
	//Тестовые данные				Ожидаемый результат
	//1 2 3 4 5 0					  1
	//1 2 3 3 2 1	0				  2
	//1 2 5 4 3 5 4 5 0			3
	int vvod, max1  , ran = 1, calc = 1;
	cout << "Введите последовательность целых неотрицательных чисел" << endl;
	cin >> vvod;
	max1 = vvod;
	while (ran != 0)
	{
		cin >> ran;

		if (ran == max1) calc += 1;

		if (ran > max1) max1 = ran;

	}
	cout << calc << endl;






	//Задание 3
	//Дано целое неотрицательное число N.
	//Найти число, составленное теми же десятичными цифрами, что и N, но в обратном порядке.
	//Тестовые данные				Ожидаемый результат
	//1234						      4321
	//5555						      5555
	//15							      51
	//987654321					    123456789
	int n, support = 0;
	cout << "Введите целое неотрицательное число N = ";
	cin >> n;
	while (n != 0)
	{
		support = n % 10;
		n = (n - support) / 10;
		cout << support;
	}
	cout << endl;




	//Задание 4
	//Найдите минимальную степень двойки, превосходящую заданное число.
	//Тестовые данные				Ожидаемый результат
	//1							        2
	//2							        4
	//15							      16
	//100							      128
	int digit1, two = 2;
	cin >> digit1;
	while (digit1 >= two)
	{
		two *= 2;

	}
	cout << two << endl;

	//Задание 5
	//Последовательность Фибоначчи определяется так:
	//F(0) = 0, F(1) = 1, …, F(n) = F(n-1) + F(n-2).
	//По данному числу N определите N-е число Фибоначчи F(N).
	//Тестовые данные				Ожидаемый результат
	//0							        0
	//1							        1
	//2							        1
	//3							        2
	//4							        3
	//6							        8
	//10							      55
	//25							      75025
	int N, a = 0, b = 1, chislo = 0, counter = 0;
	cout << "Введите число N = " << endl;
	cin >> N;
	while (counter != N)
	{
		chislo = a + b;
		b = a;
		a = chislo;
		counter += 1;

	}
	cout << chislo << endl;





	//Задание 6 (дополнительное)
	//Элемент последовательности называется локальным максимумом,
	//если он строго больше предыдущего и последующего элемента последовательности.
	//Первый и последний элемент последовательности не являются локальными максимумами.
	//Дана последовательность натуральных чисел, завершающаяся числом 0.
	//Определите количество строгих локальных максимумов в этой последовательности.
	//Формат входных данных
	//Вводится последовательность натуральных чисел, оканчивающаяся числом 0
	//(само число 0 в последовательность не входит, а служит как признак ее окончания).
	//Тестовые данные				Ожидаемый результат
	//1 2 3 2 1 0					  1
	//1 2 2 1 0					    0
	//1 3 5 4 4 6 1 0				2
	//1 9 8 7 7 8 5 9 0			2
	//*/
	//	
	int digit2, pred, sled = 1, locMax = 0, mezh;
	cout << "Введите последовательность натуральных чисел:" << endl;
	cin >> pred;

	cin >> digit2;

	while (sled != 0)
	{
		cin >> sled;

		if (sled == 0) break;
		if (digit2 > pred && digit2 > sled) locMax += 1;
		pred = digit2;

		digit2 = sled;


	}
	cout << locMax << endl;

}