#include<iostream>
using namespace std;
struct Point
{
	float x;
	float y;

};




int main()
{




///*
//Задание №1
//Создать структуру Point, содержащую два поля x, y типа float.
//Создать и проинициализировать переменную типа Point.
//Создать переменную типа Point и проинициализировать ее данными с клавиатуры.
//Вывести на экран значения x, y вышеобъявленных переменных.
//*/
//	Point per = { 1.3,5.5 };
//	Point per1;
//	cin >> per1.x;
//	cin >> per1.y;
//	cout << per1.x << "|" << per1.y << endl;
//	/*
//Написать программу, которая определеяет принадлежит ли заданная точка кругу заданного радиуса.
//Координаты точки и радиус пользователь вводит с клавиатуры.
//Для хранения координат точки использовать структуру Point.
//*/
//	int r;
//	cout << "Take R = ";
//	cin >> r;
//	cout << endl;
//	cout << " x;y = " << endl;
//	Point kor;
//	cin >> kor.x;
//	cin >> kor.y;
//	abs(kor.x);
//	abs(kor.y);
//	if (pow(pow(kor.x, 2) + pow(kor.y, 2), 0.5) > r)
//	{
//		cout << "net";
//	}
//	else
//	{
//		cout << "da";
//	}
	
	/*
Написать программу, которая по двум заданным точкам - концам отрезка находит точку середины отрезка.
Координаты точек пользователь вводит с клавиатуры.
Для хранения координат точек использовать структуру Point.
Рассчитанную точку середины отрезка также хранить как структуру Point.
Вывести координаты полученной точки в консоль.
*/
	cout << "Take dots1:" << endl;
	Point line, line1, ser;
	cin >> line.x;
	cin >> line.y;
	cout << "Take dots2:" << endl;
	cin >> line1.x;
	cin >> line1.y;
	


	cout << "golden mean: " << "( " << ser.x << " ; " << ser.y << " )" << endl;
/*
Задание №2
Создать структуру Circle, содержащую одно поле типа int - радиус и второе поле типа Point - центр окружности.
Создать и проинициализировать переменную типа Circle.
Создать переменную типа Circle и проинициализировать ее данными введенными с клавиатуры.
Вывести на экран данные, сохраненные в вышеобъявленных переменных.
Даны две переменные типа Circle.
Написать программу, которая определяет пересекаются ли окружности,
описанные данными переменными.
*/
	


}
/*
Задание №3
Создать перечисление (enum) Color, для хранения 7 цветов радуги.
Создать структуру Triangle, содержащее поле типа Color
и массив для хранения трех элементов типа int (длины сторон).
Создать и проинициализировать переменную типа Triangle корректными данными.
Вывести на экран данные, сохраненные в вышеобъявленной переменной.
Значение поля Color вывести в текстовом виде. (использовать конструкцию switch).
Рассчитать и вывести на экран периметр вышеобъявленного треугольника.

Задание №4
Создать массив из 20 элеметнов типа Point.
Проинициализировать его точками со случайными значениями координат в пределах от 0 до 100.
Выведите на экран координаты:
- точки с наименьшей x координатой
- двух точек, расстояние между которыми минимально.
Задание №5
Создать массив из 100 элементов типа Triangle.
Проинициализировать его случайными значениями (длина стороны от 1 до 10).
При инициализации проверять, что треугольник с такими длинами сторон может существовать.
(Длина каждой стороны должна быть строго меньше длин суммы двух других сторон).
Обработать полученный массив треугольников и вывести на экран следующую информацию:
- вывести на экран все треугольники, периметр которых превышает значение, введенное с клавиатуры.
Если подходящих треугольников нет, вывести соответствующее сообщение.
- количество треугольников каждого цвета

Задание №6
Написать программу, которая проверяет правильность заданных значений даты.
Дату хранить с использованием структуры.
Тестовые данные				Ожидаемый результат
1 1 1992					Дата корректна
30 6 1992					Дата корректна
31 7 1992					Дата коррентна
31 9 1994					Дата некорректна
32 1 1992					Дана некорректна
1 13 1992					Дата некорректна
29 2 1993					Дата некорректна
29 2 2004					Дата корректна
29 2 1900					Дата некоррентна
29 2 2000					Дата корректна
*/