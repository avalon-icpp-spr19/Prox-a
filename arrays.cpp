#include<iostream>
#include "Header.hpp"
using namespace std;
using namespace ext;
int main()
{
	setlocale(0, " ");
	
	/* Задание 1
	Объявите массив для хранения 10-ти целочисленных элементов
	int arr[10];
	Объявите константный массив для хранения 20-ти вещественных элементов
	double arr[20];
	Объявите массив для хранения 2-х символьных элементов
	char arr[2];
	Пусть есть массив объявленный следующим образом:
	int data[6] = { 2, 4, 8, 16, 32, 64 };
	Какой размер имеет данный массив?
	6
	Данные какого типа он хранит
	int
	Чему равен элемент массива с индексом 0?
	2
	Чему равен элемент массива с индексом 3?
	16
	Какой индекс у элемента 8?
	2
	Какой индекс у элемента 32?
	4
	Присвойте первому элементу массива значение 1.
	data[0] = 1;
	Утройте значение последнего элемента в массиве.
	data[5] *= 3;
	Выведите элементы массива на экран через пробел.
	2 4 8 16 32 64 
	Объявите массив для хранения 5-ти элеменов любого типа и проинизиализируете его с помощью списка инициализации
	int mas[5] = {5, 5, 4, 4, 4 };
	Выведите объявленный массив на экран.
	5 5 4 4 4 
	Можно ли не указывать размер массива при его создании?
	Da
	Если можно, то продемострируйте это.
	int massivchik[]={2, 34, 4};
	Пусть массив объявили следующим образом:
	int data[5] = { 1, 2 }
	Каков размер данного массива?
	5
	Чему равен элемент с индексов 1? Чему равен элемент с индексом 2?
	2 0
	Проверьте ответы с помощью дебагера.
	Выведите все элементы массива на экран.
	1 2 0 0 0 
	Пусть массив объявлен следующим образом:
	const char alpha[3] = { 'a', 'b', 'c' }
	Каков размер данного массива?
	3
	Чему равен элемент с индексов 0? Чему равен индекс у элемента 'c'
	a 2
	Допустимы ли следующие выражения:
	alpha[0];
	alpha[3];
	alpha[1] = 'd';
	alpha[1] = 'b';
	нет т.к. константа
	Выведите все элементы массива на экран.
	a b c
	*/
	
	/*
	Задание 2
	Объявите массив для хранения переменных типа int размером 20;
	Запишите в объявленный массив первые 20 натуральных чисел в порядке возрастания
	Выведите все элементы массива на экран
	Запишите в этот же массив первые 20 четных чисел в порядке возрастания
	Выведите все элементы массива на экран
	Запишите в этот же массив первые 20 степеней двойки (2^0, 2^1, ... , 2^19). Функцию pow не использовать
	Выведите все элементы массива на экран по 5 элементов в одной строке
	Занулите в предыдущем массивы все элементы с нечетным индексов (i = 1, 3, ..., 19);
	Выведите все элементы массива на экран по 5 элементов в одной строке
	*/
	////1
	//int arr[20];
	//for (int i = 0; i < 20; ++i)
	//{
	//	arr[i] = i + 1;
	//	cout << arr[i] << " ";
	//}
	//cout << endl;
	////2
	//for (int i = 2; i < 40; i +=2)
	//{
	//	arr[i] = i;
	//	cout << arr[i] << " ";
	//	
	//}
	//cout << endl;
	////3
	//for (int i = 0; i < 20; ++i)
	//{
	//	
	//	arr[i] = 1; 
	//	for (int j = 0; j < i;++j)
	//	{
	//		
	//		arr[i] *=  2;
	//	}
	//	cout << arr[i] << " ";
	//	if ((i+1)  % 5 == 0 && i != 0) cout << endl;
	//}
	////4
	//for (int i = 0; i < 20; ++i)
	//{
	//	if (i % 2 == 0) arr[i] = 0;
	//	cout << arr[ i ] << " ";
	//	if ((i +1)% 5 == 0) cout << endl;
	//}



	/* Задание 3
	При выполнении дальнейших заданий для заполнения массива случайными числами использовать функцию ext::GetRandomValue из Extention.hpp
	Например:
	int data[10];
	for(int i = 0; i < 10; ++i)
	{
	data[i] = ext::GetRandomValue(0, 100, true);
	}
	После выполнения данного кода массив data будет содержать 10 чисел в диапазоне от 0 до 100.
	Сгенерируйте массив из 10 элементов в диапазоне от -10 до 10.
	Выведите его на экран
	Найдите наибольший элемент в массиве.
	Выведите на экран значение этого элемента и его индекс
	(если максимальных элементов несколько вывести индекс любого).
	*/
//int masson[10];
//int max = -11, yandex;
//for (int i = 0; i < 10; ++i)
//{
//	masson[i] = GetRandomValue(-10, 10);
//	cout << masson[i] << " " ;
//	if (masson[i] > max) max = masson[i], yandex = i;
//}
//cout << endl;
//cout << "max = " << max << " index = " << yandex << endl;



	/*
	Сгенерируйте массив из 100 элементов в диапазоне от -100 до 100.
	Посчитайте и выведите на экран
	Сумму всех элементов этого массива.
	Количество элементов меньше 0, количество элементов равных 0, количество элементов больше 0
	*/
//cout << endl;
//int pier[100], a = 0, low = 0, zero = 0, hight = 0  ;
//for (int i = 0; i < 100; ++i)
//{
//	pier[i] = GetRandomValue(-100, 100);	
//	a += pier[i];
//	if (pier[i] < 0) low += 1;
//	if (pier[i] == 0) zero += 1;
//	if (pier[i] > 0) hight += 1;
//}
//cout << "summa = " << a << " menshe 0: " << low << " bolshe 0: " << hight << " ravno 0: " << zero << endl;


/*
	Сгенерируйте массив из 100 элементов в диапазоне от 1 до 100.
	Вывести на экран
	Элементы в записи которых встречается цифра 2
	Элементы в записи которых не встречаются нечетные цифры

	Сложите поэлементно массивы из двух предыдущих пунктов, записав результаты сложения в новый массив
	Выведите на экран получившийся массив по 10 элементов в строке.

	Сгенерируйте массив из 100 элементов в диапазоне от 1 до 100.
	Попросите пользователя ввести число из этого же диапазона.
	Осуществите поиск элемента в массиве.
	Если число есть в массиве выведите его индекс, если числа нет выведите -1.
	Посчитайте и выведите на экран количество элементов больших, чем введенное пользователем число.
	*/
int mas[100];
for (int i = 0; i < 100; ++i)
{
	mas[i] = GetRandomValue(1, 100);
	if (mas[i] % 10 == 2 && mas[i] / 10 == 2) cout << mas[i] << " ";
	if (mas[i] % 10 % 2 == 0 && mas[i] / 10 % 2 == 0) cout << mas[i]<< " ";


}



}
	/* Задание 4
	Сгенерируйте массив типа char из 100 элементов в диапазоне от a до z.
	Подсказка: функцию генерации рандомного элемента можно вызвать следующим образом:
	GetRandomValue('a','z');
	Выведите получившейся массив на экран в виде одной строки.
	Выведите на экран как часто каждая буква встречается в сгенерированном массиве.
	Выведите на экран вертикальную гистограмму рассчитанной частоты символов.
	Пример: "aabbdddz" для такой строки получится следующая гистограмма:
	|**
	|**
	|
	|***
	|
	|
	...
	|
	|
	|*
	На основании произведенных расчетов замените числовое представление на гистограмму, составленную из символов '*'
	*/

	/* Задание 5
	Пусть есть двумерный массив объявленный следующим образом:
	int data[3][2] = { {2, 4}, {8, 16}, {32, 64} };
	Чему равно количество строк в данном массиве?
	Чему равно количество элементов в каждой строке?
	Какой размер имеет данный массив?
	Данные какого типа он хранит?
	Как обратиться к элементу со значением 8?
	Как обратиться к элементу со значением 64?
	Присвойте первому элементу массива значение 1.
	Удвойте значение последнего элемента в массиве.
	Объявите двумерный массив размером 4х2 любого типа и проинизиализируете его с помощью списка инициализации
	Можно ли не указывать размер двумерного массива при его создании?
	Если можно, то продемострируйте это.
	Пусть массив объявили следующим образом:
	int data[][4] = { {1, 2}, {3,4,5} }
	Каков размер данного массива?
	Чему равен элемент data[0][0]? Чему равен элемент data[1][2]?
	Проверьте ответы с помощью дебагера.
	Увеличьте в два раза каждый элемент в данном массиве.
	Выведите все элементы массива на экран.
	Использовать циклы for
	*/

	/* Задание 6
	Сгенерируйте двумерный массив размером 10x10.
	Заполните его случайными значениями от 0 до 100
	Найдите и выведите на экран:
	Сгенерированный массив
	Сумму всех элементов массива
	Количество всех четных элементов.
	Максимальный и минимальный элементы массива вместе с их индексами
	*/

	/* Дополнительное задание
	На вход подается строка, описывающая ситуацию на поле в игре "Крестики-нолики".
	На ее основании необходимо заполнить двумерный массив char field[3][3],
	и, проаназилировав его, вывести победителя или Draw,
	если выигрышной последовательности нет ни у одного, либо есть у обоих.
	Тестовые данные				Ожидаемый результат
	XXX OO. ...					Winner is X
	OXO XO. .XO					Draw
	OXO XOX OX.					Draw
	XOX OXO OXO					Draw
	... ... ...					Draw
	XXX OOO ...					Draw
	XOO XOO XX.					Winner is X
	.O. XO. XOX					Winner is O
	*/




